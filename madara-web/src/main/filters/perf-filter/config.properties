#-----------------1.JDBC-------------------#
jdbc.driverClass.value=com.mysql.jdbc.Driver
jdbc.url=jdbc:mysql://localhost:3306/madara?useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8
jdbc.username=madara
jdbc.password.value=BKpY5urkFu2dQo9mqU04eyRp84qQoFeteUa9vTPnD88idkAM2ZRVDyQRyd40++7CTh2H2G5lrkV+C80e5vNq0w==
jdbc.publickey.value=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAN8DJlhebt8n7GtEGr5/GrldIx7szpFbRqKr49mlsmyRkeWGYrVpN3FcofSvVhM+ppqIvA1Rdg8lc6CtKAkcM+kCAwEAAQ==

#\u5b9a\u4e49\u521d\u59cb\u8fde\u63a5\u6570
jdbc.initialSize.value=10
#\u5b9a\u4e49\u6700\u5927\u8fde\u63a5\u6570
jdbc.maxPoolSize.value=50
#\u5b9a\u4e49\u6700\u5c0f\u7a7a\u95f2
jdbc.minPoolSize.value=1
#\u5b9a\u4e49\u6700\u957f\u7b49\u5f85\u65f6\u95f4
jdbc.maxWait.value=60000
#timeBetweenEvictionRunsMillis\u6beb\u79d2\u79d2\u68c0\u67e5\u4e00\u6b21\u8fde\u63a5\u6c60\u4e2d\u7a7a\u95f2\u7684\u8fde\u63a5,\u628a\u7a7a\u95f2\u65f6\u95f4\u8d85\u8fc7minEvictableIdleTimeMillis\u6beb\u79d2\u7684\u8fde\u63a5\u65ad\u5f00,\u76f4\u5230\u8fde\u63a5\u6c60\u4e2d\u7684\u8fde\u63a5\u6570\u5230minIdle\u4e3a\u6b62
jdbc.timeBetweenEvictionRunsMillis.value=3000
jdbc.minEvictableIdleTimeMillis.value=300000

#-----------------2.DUBBO-------------------#
dubbo.registry.address.value=zookeeper://168.33.131.160:2181?backup=168.33.131.104:2181,168.33.131.159:2181
dubbo.protocol.port.value=20883
dubbo.protocol.threads.value=20
dubbo.cache.file.value=/output/dubbo.cache
dubbo.consumer.timeout.value=300000
dubbo.provider.timeout.value=300000
dubbo.provider.loadbalance.value=leastactive

#-----------------3.\u65e5\u5fd7\u76f8\u5173\u914d\u7f6e-------------------#
stdout.value=
file.async.value=<appender-ref ref="file.async" />
file.error.value=<appender-ref ref="file.error" />
file.log.value=<!--<appender-ref ref="file.log"/>-->

#-----------------4.REDIS-------------------#
# redis\u96c6\u7fa4\u6a21\u5f0f\u914d\u7f6e
# \u4e3a\u9632\u6b62\u6df7\u6dc6\uff0c\u8be5\u914d\u7f6e\u6587\u4ef6\u6240\u6709\u914d\u7f6e\u9879\u524d\u7f00\u5747\u5e94\u4e3a"redis.cluster."

### ---JedisPoolConfig\u53c2\u6570\u914d\u7f6e---
# \u6700\u5927\u8fde\u63a5\u6570(\u9ed8\u8ba48)
redis.cluster.jedis.pool.maxTotal.value=30
# \u6700\u5927\u7a7a\u95f2\u65f6\u95f4(\u9ed8\u8ba48)
redis.cluster.jedis.pool.maxIdle.value=10
# \u6700\u5c0f\u7a7a\u95f2\u65f6\u95f4(\u9ed8\u8ba48)
redis.cluster.jedis.pool.minIdle.value=10
# \u6bcf\u6b21\u6700\u5927\u8fde\u63a5\u6570(\u9ed8\u8ba4-1)
redis.cluster.jedis.pool.numTestsPerEvictionRun.value=1024
# \u91ca\u653e\u626b\u63cf\u7684\u626b\u63cf\u95f4\u9694(\u9ed8\u8ba430000)
redis.cluster.jedis.pool.timeBetweenEvictionRunsMillis.value=30000
# \u8fde\u63a5\u7684\u6700\u5c0f\u7a7a\u95f2\u65f6\u95f4(\u9ed8\u8ba460000)
redis.cluster.jedis.pool.minEvictableIdleTimeMillis.value=60000
# \u8fde\u63a5\u7a7a\u95f2\u65f6\u95f4\u591a\u4e45\u540e\u91ca\u653e\uff0c\u5f53\u7a7a\u95f2\u65f6\u95f4>\u8be5\u503c\u4e14\u7a7a\u95f2\u8fde\u63a5>\u6700\u5927\u7a7a\u95f2\u8fde\u63a5\u6570\u65f6\u76f4\u63a5\u91ca\u653e(\u9ed8\u8ba4-1)
redis.cluster.jedis.pool.softMinEvictableIdleTimeMillis.value=10000
# \u83b7\u5f97\u94fe\u63a5\u65f6\u7684\u6700\u5927\u7b49\u5f85\u6beb\u79d2\u6570\uff0c\u5c0f\u4e8e0\uff1a\u963b\u585e(\u9ed8\u8ba4-1)
redis.cluster.jedis.pool.maxWaitMillis.value=1500
# \u5728\u83b7\u5f97\u94fe\u63a5\u7684\u65f6\u5019\u68c0\u67e5\u6709\u6548\u6027(\u9ed8\u8ba4false)
redis.cluster.jedis.pool.testOnBorrow.value=true
# \u5728\u7a7a\u95f2\u65f6\u68c0\u67e5\u6709\u6548\u6027(\u9ed8\u8ba4true)
redis.cluster.jedis.pool.testWhileIdle.value=true
# \u8fde\u63a5\u8017\u5c3d\u65f6\u662f\u5426\u963b\u585e\uff0cfalse\u62a5\u5f02\u5e38\uff0ctrue\u963b\u585e(\u9ed8\u8ba4true)
redis.cluster.jedis.pool.blockWhenExhausted.value=false

###---JedisConnectionFactory\u53c2\u6570\u914d\u7f6e---
redis.cluster.jedis.connection.factory.timeout.value=3000

###---\u96c6\u7fa4\u4fe1\u606f---
redis.cluster.node1.host.value=168.33.131.102
redis.cluster.node1.port.value=9001
redis.cluster.node2.host.value=168.33.131.103
redis.cluster.node2.port.value=9002
redis.cluster.node3.host.value=168.33.131.104
redis.cluster.node3.port.value=9003
redis.cluster.node4.host.value=168.33.131.159
redis.cluster.node4.port.value=9004
redis.cluster.node5.host.value=168.33.131.229
redis.cluster.node5.port.value=9005
redis.cluster.node6.host.value=168.33.131.160
redis.cluster.node6.port.value=9006

### ---\u5206\u5e03\u5f0f\u9501\u914d\u7f6e---
redis.cluster.registry.key.value=registryKey

#-----------------6.KAFKA-------------------#
### ---KAFKA PRODUCER---
kafka.producerProperties.bootstrap.servers.value=168.33.131.127:9092,168.33.132.15:9092,168.33.54.12:9092
kafka.producerProperties.retries.value=1
kafka.producerProperties.batch.size.value=16384
kafka.producerProperties.linger.ms.value=1
kafka.producerProperties.buffer.memory.value=33554432

kafka.producer.defaultTopic.name.value=riskTopic

#-----------------7.MYSQL\u5907\u4efd\u811a\u672c\u914d\u7f6e-------------------#
# \u5168\u91cf\u5907\u4efd\u811a\u672c
mysql.backup.shell.fullbackup.value=/home/ewallet/backups/scripts/full_backup.sh
# \u589e\u91cf\u5907\u4efd\u811a\u672c
mysql.backup.shell.incrementalbackup.value=/home/ewallet/backups/scripts/incremental_backup.sh
# prepare\u811a\u672c
mysql.backup.shell.prepare.value=/home/ewallet/backups/scripts/backup_prepare.sh
# \u6570\u636e\u6062\u590d\u811a\u672c
mysql.backup.shell.restore.value=/home/ewallet/backups/scripts/backup_restore.sh
# \u6570\u636e\u5907\u4efd\u4e3b\u673a\u5730\u5740
mysql.backup.host.name.value=168.33.131.159
# \u6570\u636e\u5907\u4efd\u4e3b\u673a\u7528\u6237
mysql.backup.host.user.value=root
# \u6570\u636e\u5907\u4efd\u4e3b\u673a\u5bc6\u7801
mysql.backup.host.password.value=shenzhen

#-----------------8.\u4efb\u52a1\u8c03\u5ea6\u914d\u7f6e-------------------#
# job admin address list, such as "http://address" or "http://address01,http://address02"
job.admin.addresses=http://127.0.0.1:8080/ewallet-job-center

# job executer address
job.executor.appname=ewallet-web-DB
job.executor.ip=
job.executor.port=9999

# job log path
job.executor.logpath=/data/applogs/job/jobhandler/

# access token
job.accessToken=

# job log retention days
job.executor.logretentiondays=-1