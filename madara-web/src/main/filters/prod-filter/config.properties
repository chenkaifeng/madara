#-----------------1.JDBC-------------------#
jdbc.driverClass.value=com.mysql.jdbc.Driver
#读库
jdbc.url=jdbc:mysql://localhost:3306/madara?useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8
jdbc.username=madara
jdbc.password.value=BKpY5urkFu2dQo9mqU04eyRp84qQoFeteUa9vTPnD88idkAM2ZRVDyQRyd40++7CTh2H2G5lrkV+C80e5vNq0w==
jdbc.publickey.value=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAN8DJlhebt8n7GtEGr5/GrldIx7szpFbRqKr49mlsmyRkeWGYrVpN3FcofSvVhM+ppqIvA1Rdg8lc6CtKAkcM+kCAwEAAQ==
#定义初始连接数
jdbc.initialSize.value=10
#定义最大连接数
jdbc.maxPoolSize.value=50
#定义最小空闲
jdbc.minPoolSize.value=1
#定义最长等待时间
jdbc.maxWait.value=60000
#timeBetweenEvictionRunsMillis毫秒秒检查一次连接池中空闲的连接,把空闲时间超过minEvictableIdleTimeMillis毫秒的连接断开,直到连接池中的连接数到minIdle为止
jdbc.timeBetweenEvictionRunsMillis.value=3000
jdbc.minEvictableIdleTimeMillis.value=300000

#-----------------2.DUBBO-------------------#
dubbo.registry.address.value=zookeeper://168.33.131.57:2181?backup=168.33.131.63:2181,168.33.131.64:2181
dubbo.protocol.port.value=20883
dubbo.protocol.threads.value=20
dubbo.cache.file.value=/output/dubbo.cache
dubbo.consumer.timeout.value=300000
dubbo.provider.timeout.value=300000
dubbo.provider.loadbalance.value=leastactive

#-----------------3.日志相关配置-------------------#
stdout.value=
file.async.value=<appender-ref ref="file.async" />
file.error.value=<appender-ref ref="file.error" />
file.log.value=<!--<appender-ref ref="file.log"/>-->

#-----------------4.REDIS-------------------#
# redis集群模式配置
# 为防止混淆，该配置文件所有配置项前缀均应为"redis.cluster."

### ---JedisPoolConfig参数配置---
# 最大连接数(默认8)
redis.cluster.jedis.pool.maxTotal.value=30
# 最大空闲时间(默认8)
redis.cluster.jedis.pool.maxIdle.value=10
# 最小空闲时间(默认8)
redis.cluster.jedis.pool.minIdle.value=10
# 每次最大连接数(默认-1)
redis.cluster.jedis.pool.numTestsPerEvictionRun.value=1024
# 释放扫描的扫描间隔(默认30000)
redis.cluster.jedis.pool.timeBetweenEvictionRunsMillis.value=30000
# 连接的最小空闲时间(默认60000)
redis.cluster.jedis.pool.minEvictableIdleTimeMillis.value=60000
# 连接空闲时间多久后释放，当空闲时间>该值且空闲连接>最大空闲连接数时直接释放(默认-1)
redis.cluster.jedis.pool.softMinEvictableIdleTimeMillis.value=10000
# 获得链接时的最大等待毫秒数，小于0：阻塞(默认-1)
redis.cluster.jedis.pool.maxWaitMillis.value=1500
# 在获得链接的时候检查有效性(默认false)
redis.cluster.jedis.pool.testOnBorrow.value=true
# 在空闲时检查有效性(默认true)
redis.cluster.jedis.pool.testWhileIdle.value=true
# 连接耗尽时是否阻塞，false报异常，true阻塞(默认true)
redis.cluster.jedis.pool.blockWhenExhausted.value=false

###---JedisConnectionFactory参数配置---
redis.cluster.jedis.connection.factory.timeout.value=3000

###---集群信息---
redis.cluster.node1.host.value=168.33.131.102
redis.cluster.node1.port.value=9001
redis.cluster.node2.host.value=168.33.131.103
redis.cluster.node2.port.value=9002
redis.cluster.node3.host.value=168.33.131.104
redis.cluster.node3.port.value=9003
redis.cluster.node4.host.value=168.33.131.159
redis.cluster.node4.port.value=9004
redis.cluster.node5.host.value=168.33.131.229
redis.cluster.node5.port.value=9005
redis.cluster.node6.host.value=168.33.131.160
redis.cluster.node6.port.value=9006

### ---分布式锁配置---
redis.cluster.registry.key.value=registryKey

#-----------------6.KAFKA-------------------#
### ---KAFKA PRODUCER---
kafka.producerProperties.bootstrap.servers.value=168.33.131.227:9092,168.33.131.228:9092
kafka.producerProperties.retries.value=1
kafka.producerProperties.batch.size.value=16384
kafka.producerProperties.linger.ms.value=1
kafka.producerProperties.buffer.memory.value=33554432

kafka.producer.defaultTopic.name.value=riskTopic

#-----------------7.MYSQL备份脚本配置-------------------#
# 全量备份脚本
mysql.backup.shell.fullbackup.value=/home/ewallet/backups/scripts/full_backup.sh
# 增量备份脚本
mysql.backup.shell.incrementalbackup.value=/home/ewallet/backups/scripts/incremental_backup.sh
# prepare脚本
mysql.backup.shell.prepare.value=/home/ewallet/backups/scripts/backup_prepare.sh
# 数据恢复脚本
mysql.backup.shell.restore.value=/home/ewallet/backups/scripts/backup_restore.sh
# 数据备份主机地址
mysql.backup.host.name.value=168.33.131.159
# 数据备份主机用户
mysql.backup.host.user.value=root
# 数据备份主机密码
mysql.backup.host.password.value=shenzhen

#-----------------8.任务调度配置-------------------#
# job admin address list, such as "http://address" or "http://address01,http://address02"
job.admin.addresses=http://127.0.0.1:8080/ewallet-job-center

# job executer address
job.executor.appname=ewallet-web-DB
job.executor.ip=
job.executor.port=9999

# job log path
job.executor.logpath=/data/applogs/job/jobhandler/

# access token
job.accessToken=

# job log retention days
job.executor.logretentiondays=-1